# ansible-playbook -i ~/ansible/hosts /playbooks/setup-retropie-pi-cade.yml
---
- hosts: picades
  gather_facts: yes
  vars:

    smb_rom_share: //VHSTORE/ROMS
    smb_rom_folder: pi-cade
    smb_es_folder: emulationstation
    boot_config_options:
      # Enable audio (loads snd_bcm2835)
      - regexp: "^#?dtparam"
        line: "dtparam=audio=on"

      # HDMI & Screen
      - regexp: "^#?hdmi_force_hotplug"
        line: "hdmi_force_hotplug=1"
      - regexp: "^#?hdmi_group"
        line: "hdmi_group=2"
      - regexp: "^#?hdmi_mode"
        line: "hdmi_mode=87"
      - regexp: "^#?hdmi_cvt"
        line: "hdmi_cvt=800 480 60 6 0 0 0"
      - regexp: "^#?overscan_scale"
        line: "overscan_scale=1"

    rc_local_options:
      # Disable HDMI on startup (for power savings).
      - regexp: "^/usr/local/bin/retrogame"
        line: "/usr/local/bin/retrogame &"

  tasks:
    - name: Set the GPU memory split value via raspi-config
      become: yes
      command: raspi-config nonint do_memory_split gpu_mem_1024=256

    # Run apt-get update and apt-get upgrade 
    - include_tasks: ../tasks/update.yml
      tags: update

    - name: Install dependancies from apt
      become: yes
      apt: name={{item}} state=installed
      with_items:
        - git
        - smbclient

    # Download the latest version of the setup script using git
    - name: Git clone RetroPie-Setup script
      git:
        repo: "https://github.com/RetroPie/RetroPie-Setup.git"
        dest: "/home/pi/RetroPie-Setup"
        update: yes
        
    # Install EmulationStation Frontend
    - name: Install EmulationStation
      command: "{{item}} chdir=/home/pi/RetroPie-Setup"
      become: yes
      with_items:
          - ./retropie_packages.sh emulationstation depends
          - ./retropie_packages.sh emulationstation install_bin
          - ./retropie_packages.sh emulationstation configure
          - ./retropie_packages.sh esthemes install_theme
          - ./retropie_packages.sh autostart enable
      tags: debug

    # Install Optional RetroPie Packages
    - name: Install Optional Packages
      become: yes
      shell: >
          ./retropie_packages.sh {{item}} depends;
          ./retropie_packages.sh {{item}} install_bin;
          ./retropie_packages.sh {{item}} configure
      args:
          chdir: "/home/pi/RetroPie-Setup"
      with_items:
          - kodi
          
    # Configure boot/config.txt values
    - name: Configure option values in /boot/config.txt file.
      become: yes
      lineinfile:
        dest: /boot/config.txt
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        insertafter: EOF
        state: present
      with_items: "{{ boot_config_options }}"

    - name: Configure options in /etc/rc.local.
      lineinfile:
        dest: /etc/rc.local
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        insertbefore: "^exit"
        state: present
      with_items: "{{ rc_local_options }}"

    # Download retrogame
    - name: Download retrogame
      become: yes
      command: curl -f -s -o /tmp/retrogame https://raw.githubusercontent.com/adafruit/Adafruit-Retrogame/master/retrogame

    # Install retrogame
    - name: Install retrogame
      become: yes
      command: mv /tmp/retrogame /usr/local/bin 

    # Set retrogame permissions
    - name: Set retrogame permissions
      become: yes
      command: chmod 755 /usr/local/bin/retrogame 

    # Put the appropriate retrogame.cfg file in place
    - name: Put the appropriate retrogame.cfg file in place
      become: yes
      template: src=../templates/controllers/pi-cade.retrogame.cfg dest=/boot/retrogame.cfg
      notify:
        reboot

    # Set up Retrogame UDEV rule
    - name: Set up Retrogame UDEV rule
      become: yes
      command: echo "SUBSYSTEM==\"input\", ATTRS{name}==\"retrogame\", ENV{ID_INPUT_KEYBOARD}=\"1\"" > /etc/udev/rules.d/10-retrogame.rules

    # Copy roms using smbclient
    - include_tasks: ../tasks/copy-retropie-roms.yml

    # Configure Kodi
    # Requires a kodi folder in your roms folder,
    # a kodi.sh startup file in that folder that contains kodi-standalone,
    # and a record in the es_systems.config file.
    # Put the appropriate joystick.xml file in place
    - name: Put the appropriate joystick.xml file in place
      template: src=../templates/kodi/joystick.pi-cade.xml dest=/home/pi/.kodi/userdata/keymaps/joystick.xml
      notify:
        reboot

    # Run chmod on kodi.sh file
    - name: Run chmod on kodi.sh file
      become: yes
      command: chmod u+x /home/pi/RetroPie/roms/kodi/kodi.sh

    - include_tasks: ../tasks/reboot.yml
      tags: system

